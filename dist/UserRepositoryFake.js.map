{"version":3,"sources":["../dist-esnext/UserRepositoryFake.js"],"names":["entities","createUserRepoFake","repo","getByUserNameOrEmail","getOtherUsersWithSameUserNameOrEmail","user","Promise","resolve","userNameOrEmail"],"mappings":";;;;;;;AAAA;;AACO,IAAIA,8BAAW,EAAf;AACA,IAAMC,kDAAqB,SAArBA,kBAAqB,GAAM;AACpC,YAFOD,QAEP,cAAW,EAAX;AACA,QAAME,OAAO,kCAAiB,gBAAjB,EAAmC,SAAnC,CAAb;AACA;AACAA,SAAK,sBAAL,IAA+BC,oBAA/B;AACA;AACAD,SAAK,sCAAL,IAA+CE,oCAA/C;AACA,WAAOF,IAAP;AACH,CARM;AASA,IAAME,sFAAuC,SAAvCA,oCAAuC,CAACC,IAAD,EAAU;AAC1D,WAAOC,QAAQC,OAAR,CAAgBP,QAAhB,CAAP;AACH,CAFM;AAGA,IAAMG,sDAAuB,SAAvBA,oBAAuB,CAACK,eAAD,EAAqB;AACrD,WAAOF,QAAQC,OAAR,CAAgBP,SAAS,CAAT,CAAhB,CAAP;AACH,CAFM;AAGP","file":"UserRepositoryFake.js","sourcesContent":["import { createRepository } from '@alanmarcell/ptz-core-app';\nexport let entities = [];\nexport const createUserRepoFake = () => {\n    entities = [];\n    const repo = createRepository('collectionFake', 'urlFake');\n    // tslint:disable-next-line:no-string-literal\n    repo['getByUserNameOrEmail'] = getByUserNameOrEmail;\n    // tslint:disable-next-line:no-string-literal\n    repo['getOtherUsersWithSameUserNameOrEmail'] = getOtherUsersWithSameUserNameOrEmail;\n    return repo;\n};\nexport const getOtherUsersWithSameUserNameOrEmail = (user) => {\n    return Promise.resolve(entities);\n};\nexport const getByUserNameOrEmail = (userNameOrEmail) => {\n    return Promise.resolve(entities[0]);\n};\n//# sourceMappingURL=UserRepositoryFake.js.map"]}